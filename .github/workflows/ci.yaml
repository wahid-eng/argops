name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  MONGO_URI: ${{ secrets.MONGO_URI }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  PORT: 3000

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Run Tests (for example, using npm for Node.js services)
      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      # Fetch Git tags to derive version number
      - name: Fetch all history for all tags
        run: git fetch --prune --unshallow --tags

      # Get the latest Git tag for versioning
      - name: Get version from Git tag
        id: get_version
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "::set-output name=tag::${TAG}"

      # Build the version number using the tag and the build number
      - name: Set version
        id: set_version
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          VERSION=${{ steps.get_version.outputs.tag }}-build.${BUILD_NUMBER}
          echo "VERSION=$VERSION"
          echo "::set-output name=version::${VERSION}"

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.set_version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login to Docker registry (Docker Hub or other registries)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/etma:${{ steps.set_version.outputs.version }} .
