name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Run Tests (for example, using npm for Node.js services)
      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: 3000

      # Make sure no error during build image
      # Build the version number using the run number
      - name: Set version
        id: set_version
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          VERSION="1.0.0-build.${BUILD_NUMBER}"
          echo "VERSION=$VERSION"
          echo "::set-output name=version::${VERSION}"

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.set_version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login to Docker registry (Docker Hub or other registries)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/etma:${{ steps.set_version.outputs.version }} .
